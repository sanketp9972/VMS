{"ast":null,"code":"import axios from 'axios';\nimport { createUrl, log } from '../utils/utils';\nexport async function registerUser(firstName, lastName, address, phone, email, password, userRoles) {\n  const url = createUrl('/users');\n  const body = {\n    firstName,\n    lastName,\n    address,\n    phone,\n    email,\n    password,\n    userRoles\n  };\n\n  try {\n    // Check if the user already exists by email\n    try {\n      const getUserResponse = await axios.get(url);\n\n      if (getUserResponse.data && getUserResponse.data.email === email) {\n        console.log(getUserResponse.data);\n        return {\n          email: ''\n        }; // Return an empty object to indicate existing email\n      }\n    } catch (getUserEx) {\n      log('Error fetching user data by email:', getUserEx);\n    } // Proceed with registration if the email is not found in the database\n\n\n    const response = await axios.post(url, body);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log('Error registering user:', ex);\n    return null;\n  }\n}\nexport async function loginUser(email, password) {\n  const url = createUrl('/users/signIn');\n  const body = {\n    email,\n    password\n  }; // wait till axios is making the api call and getting response from server\n\n  try {\n    const response = await axios.post(url, body);\n    log(response.data);\n    log(response.data.email);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","createUrl","log","registerUser","firstName","lastName","address","phone","email","password","userRoles","url","body","getUserResponse","get","data","console","getUserEx","response","post","ex","loginUser"],"sources":["/home/vaibhav/Desktop/VMS/vms/src/services/user.js"],"sourcesContent":["import axios from 'axios';\nimport { createUrl, log } from '../utils/utils';\n\nexport async function registerUser(\n  firstName,\n  lastName,\n  address,\n  phone,\n  email,\n  password,\n  userRoles\n) {\n  const url = createUrl('/users');\n  const body = {\n    firstName,\n    lastName,\n    address,\n    phone,\n    email,\n    password,\n    userRoles\n  };\n\n  try {\n    // Check if the user already exists by email\n    try {\n      const getUserResponse = await axios.get(url);\n      if (getUserResponse.data && getUserResponse.data.email === email) {\n        console.log(getUserResponse.data);\n        return { email: '' }; // Return an empty object to indicate existing email\n      }\n    } catch (getUserEx) {\n      log('Error fetching user data by email:', getUserEx);\n    }\n\n    // Proceed with registration if the email is not found in the database\n    const response = await axios.post(url, body);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log('Error registering user:', ex);\n    return null;\n  }\n}\n\nexport async function loginUser(email, password) {\n  const url = createUrl('/users/signIn')\n  const body = {\n    email,\n    password,\n  }\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.post(url, body)\n    log(response.data)\n    log(response.data.email)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,gBAA/B;AAEA,OAAO,eAAeC,YAAf,CACLC,SADK,EAELC,QAFK,EAGLC,OAHK,EAILC,KAJK,EAKLC,KALK,EAMLC,QANK,EAOLC,SAPK,EAQL;EACA,MAAMC,GAAG,GAAGV,SAAS,CAAC,QAAD,CAArB;EACA,MAAMW,IAAI,GAAG;IACXR,SADW;IAEXC,QAFW;IAGXC,OAHW;IAIXC,KAJW;IAKXC,KALW;IAMXC,QANW;IAOXC;EAPW,CAAb;;EAUA,IAAI;IACF;IACA,IAAI;MACF,MAAMG,eAAe,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUH,GAAV,CAA9B;;MACA,IAAIE,eAAe,CAACE,IAAhB,IAAwBF,eAAe,CAACE,IAAhB,CAAqBP,KAArB,KAA+BA,KAA3D,EAAkE;QAChEQ,OAAO,CAACd,GAAR,CAAYW,eAAe,CAACE,IAA5B;QACA,OAAO;UAAEP,KAAK,EAAE;QAAT,CAAP,CAFgE,CAE1C;MACvB;IACF,CAND,CAME,OAAOS,SAAP,EAAkB;MAClBf,GAAG,CAAC,oCAAD,EAAuCe,SAAvC,CAAH;IACD,CAVC,CAYF;;;IACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWR,GAAX,EAAgBC,IAAhB,CAAvB;IACAV,GAAG,CAACgB,QAAQ,CAACH,IAAV,CAAH;IACA,OAAOG,QAAQ,CAACH,IAAhB;EACD,CAhBD,CAgBE,OAAOK,EAAP,EAAW;IACXlB,GAAG,CAAC,yBAAD,EAA4BkB,EAA5B,CAAH;IACA,OAAO,IAAP;EACD;AACF;AAED,OAAO,eAAeC,SAAf,CAAyBb,KAAzB,EAAgCC,QAAhC,EAA0C;EAC/C,MAAME,GAAG,GAAGV,SAAS,CAAC,eAAD,CAArB;EACA,MAAMW,IAAI,GAAG;IACXJ,KADW;IAEXC;EAFW,CAAb,CAF+C,CAO/C;;EACA,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWR,GAAX,EAAgBC,IAAhB,CAAvB;IACAV,GAAG,CAACgB,QAAQ,CAACH,IAAV,CAAH;IACAb,GAAG,CAACgB,QAAQ,CAACH,IAAT,CAAcP,KAAf,CAAH;IACA,OAAOU,QAAQ,CAACH,IAAhB;EACD,CALD,CAKE,OAAOK,EAAP,EAAW;IACXlB,GAAG,CAACkB,EAAD,CAAH;IACA,OAAO,IAAP;EACD;AACF"},"metadata":{},"sourceType":"module"}